---
resource_types:
  - name: pull-request
    type: registry-image
    source:
      repository: docker.io/teliaoss/github-pr-resource
resources:
  - name: pull-request
    type: pull-request
    icon: source-branch
    webhook_token: ((webhook-token))
    check_every: 1h
    source:
      repository: realliance/senior-accounts
      access_token: ((github-access-token))
      disable_ci_skip: true
      disable_forks: true
  - name: senior-accounts-main
    type: git
    icon: git
    webhook_token: ((webhook-token))
    check_every: 1h
    source:
      uri: https://github.com/realliance/senior-accounts
      branch: main
  - name: quay
    type: registry-image
    icon: docker
    check_every: 1h
    source:
      repository: quay.io/realliance/senior-accounts
      tag: latest
      username: ((quay-ci-account.username))
      password: ((quay-ci-account.token))
  - name: ruby
    type: registry-image
    icon: docker
    check_every: 1h
    source:
      repository: docker.io/ruby
  - name: python
    type: registry-image
    icon: docker
    check_every: 1h
    source:
      repository: docker.io/python
  - name: oci-build-task
    type: registry-image
    icon: docker
    check_every: 1h
    source:
      repository: docker.io/vito/oci-build-task
  - name: sentry-cli
    type: registry-image
    icon: docker
    check_every: 1h
    source:
      repository: docker.io/getsentry/sentry-cli
jobs:
  - name: validate-pr
    plan:
      - get: pull-request
        trigger: true
        version: every
      - put: pull-request
        params:
          path: pull-request
          status: pending
      - get: ruby
      - get: python
      - in_parallel:
          - task: rubocop
            image: ruby
            config:
              platform: linux
              inputs:
                - name: pull-request
                  path: .
              caches:
                - path: vendor
              run:
                path: /bin/sh
                args:
                  - -exc
                  - |
                    bundle config set --local path './vendor' > /dev/null
                    bundle install > /dev/null
                    bundle exec rubocop
          - task: rspec
            image: ruby
            config:
              platform: linux
              inputs:
                - name: pull-request
                  path: .
              outputs:
                - name: coverage
                  path: pull-request/coverage
              caches:
                - path: vendor
              run:
                path: /bin/sh
                args:
                  - -exc
                  - |
                    bundle config set --local path './vendor' > /dev/null
                    bundle install > /dev/null
                    bundle exec rails db:setup > /dev/null
                    bundle exec rails spec
          - task: database-consistency
            image: ruby
            config:
              platform: linux
              inputs:
                - name: pull-request
                  path: .
              caches:
                - path: vendor
              run:
                path: /bin/sh
                args:
                  - -exc
                  - |
                    bundle config set --local path './vendor' > /dev/null
                    bundle install > /dev/null
                    bundle exec rails db:setup > /dev/null
                    bundle exec database_consistency
          - task: check-schema
            image: ruby
            config:
              platform: linux
              inputs:
                - name: pull-request
                  path: .
              caches:
                - path: vendor
              run:
                path: /bin/sh
                args:
                  - -exc
                  - |
                    bundle config set --local path './vendor' > /dev/null
                    bundle install > /dev/null
                    bundle exec rails db:setup > /dev/null
                    export HASH1="$(md5sum ./db/schema.rb | awk '{print $1}')"
                    bundle exec rails db:migrate:redo
                    export HASH2="$(md5sum ./db/schema.rb | awk '{print $1}')"
                    [ "$HASH1" = "$HASH2" ]
          - task: yamllint
            image: python
            config:
              platform: linux
              inputs:
                - name: pull-request
                  path: .
              caches:
                - path: cache
              run:
                path: /bin/sh
                args:
                  - -exc
                  - |
                    pip install --cache-dir ./cache yamllint > /dev/null
                    yamllint .
          - task: pre-commit
            image: python
            params:
              SKIP: no-commit-to-branch,validate-pipeline,renovate-config,lint-apidocs
            config:
              platform: linux
              inputs:
                - name: pull-request
                  path: .
              caches:
                - path: cache
              run:
                path: /bin/sh
                args:
                  - -exc
                  - |
                    pip install --cache-dir ./cache pre-commit > /dev/null
                    pre-commit run --all-files
        on_failure:
          put: pull-request
          params:
            path: pull-request
            status: failure
      - put: pull-request
        params:
          path: pull-request
          status: success
  - name: set-pipeline
    plan:
      - get: senior-accounts-main
        trigger: true
      - set_pipeline: self
        file: senior-accounts-main/ci/ci.yaml
  - name: publish
    plan:
      - get: senior-accounts-main
        trigger: true
      - get: oci-build-task
      - get: sentry-cli
      - task: sentry-new
        image: sentry-cli
        params:
          SENTRY_ORG: ((sentry.org))
          SENTRY_AUTH_TOKEN: ((sentry.auth-token))
          SENTRY_URL: ((sentry.url))
        config:
          platform: linux
          inputs:
            - name: senior-accounts-main
              path: .
          outputs:
            - name: release
          run:
            path: /bin/sh
            args:
              - -exc
              - |
                VERSION=senior-accounts@$(sentry-cli releases propose-version)
                echo $VERSION > release/version.txt
                sentry-cli releases new -p senior-accounts "$VERSION"
                sentry-cli releases set-commits --auto "$VERSION"
      - load_var: sentry-release
        file: release/version.txt
        reveal: true
      - task: build
        privileged: true
        image: oci-build-task
        params:
          BUILD_ARG_RELEASE: ((.:sentry-release))
        config:
          platform: linux
          inputs:
            - name: senior-accounts-main
              path: .
          outputs:
            - name: image
          caches:
            - path: cache
          run:
            path: build
      - put: quay
        params:
          image: image/image.tar
      - task: sentry-finalize
        image: sentry-cli
        params:
          SENTRY_ORG: ((sentry.org))
          SENTRY_AUTH_TOKEN: ((sentry.auth-token))
          SENTRY_URL: ((sentry.url))
          VERSION: ((.:sentry-release))
        config:
          platform: linux
          run:
            path: /bin/sh
            args:
              - -exc
              - |
                sentry-cli releases finalize "$VERSION"
